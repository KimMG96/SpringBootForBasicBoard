<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="info" monitorInterval="30">
    <!--변수 설정-->
    <Properties>
        <Property name="BASE_DIR">./logs</Property> <!--로그 파일 경로-->
        <Property name="LOG_FORMAT">[%date{yyyy-MM-dd HH:mm:ss}][%level][%file:%line] %msg%n</Property><!--로그 출력 형태-->
    </Properties>

    <Appenders>
        <!--콘솔 로그-->
        <Console name="Console" target="SYSTEM_OUT" follow="true">
            <PatternLayout pattern="${LOG_FORMAT}"/>
        </Console>

        <!--로그 파일 (사용 X)-->
<!--        <RollingFile name="File" fileName="${BASE_DIR}/logs.log" filePattern="${BASE_DIR}/%d{yyyy-MM-dd}.logs.zip">-->
<!--            <PatternLayout pattern="${LOG_FORMAT}"/>-->
<!--            <Policies>-->
<!--                <TimeBasedTriggeringPolicy interval="1" modulate="true"/> &lt;!&ndash; 매일(yyyy-MM-dd) log zip파일 생성 &ndash;&gt;-->
<!--            </Policies>-->
<!--            <DefaultRolloverStrategy>-->
<!--                <Delete basePath="${BASE_DIR}">-->
<!--                    <IfAccumulatedFileCount exceeds="4"/>   &lt;!&ndash; log 파일이 4개 이상일때 예전 log 파일 삭제&ndash;&gt;-->
<!--                    &lt;!&ndash; <IfFileName glob="*.log"/> &ndash;&gt; &lt;!&ndash; 삭제할 파일명 &ndash;&gt;-->
<!--                    &lt;!&ndash; <IfLastModified age="3d"/> &ndash;&gt; &lt;!&ndash; 마지막 로그가 찍히고 3일 이상된 log 파일 삭제 &ndash;&gt;-->
<!--                </Delete>-->
<!--            </DefaultRolloverStrategy>-->
<!--        </RollingFile>-->
    </Appenders>

    <Loggers>
        <Root level="INFO">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="File"/>
        </Root>
        <!-- log4jdbc 옵션 설정 -->
        <logger name="jdbc" level="OFF"/>
        <!-- 커넥션 open close 이벤트를 로그로 남긴다. -->
        <logger name="jdbc.connection" level="OFF"/>
        <!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. -->
        <logger name="jdbc.sqlonly" level="DEBUG"/>
        <!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
        <logger name="jdbc.sqltiming" level="DEBUG"/>
        <!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. -->
        <logger name="jdbc.audit" level="OFF"/>
        <!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. -->
        <logger name="jdbc.resultset" level="OFF"/>
        <!-- SQL 결과 조회된 데이터의 table을 로그로 남긴다. -->
        <logger name="jdbc.resultsettable" level="OFF"/>


    </Loggers>
</Configuration>